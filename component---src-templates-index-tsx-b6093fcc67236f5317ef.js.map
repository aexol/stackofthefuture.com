{"version":3,"sources":["webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/icons/facebook.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Logo.tsx","webpack:///./src/components/icons/twitter.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/templates/index.tsx"],"names":["HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SiteNav","subscribe","React","openModal","current","open","render","this","props","isHome","css","role","to","config","facebook","SocialLink","href","target","title","rel","twitter","Facebook","xmlns","viewBox","style","height","d","SiteFooter","setLightness","colors","darkgrey","SiteFooterContent","SiteFooterNav","Footer","outer","inner","className","Date","getFullYear","footer","rotate","keyframes","Logo","Twitter","navCss","whitegrey","lighten","midgrey","Pagination","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","String","fromCharCode","Array","from","length","_","i","key","IndexPage","width","data","header","childImageSharp","fluid","sizes","split","Number","aspectRatio","WallPosts","Helmet","lang","name","content","description","property","siteUrl","src","googleSiteVerification","Wrapper","SiteHeader","backgroundImage","marginBottom","logo","fixed","alt","id","SiteMain","PostFeed","PostFeedRaise","allMarkdownRemark","edges","filter","post","node","frontmatter","series","map","draft","PostCard","fields","slug","videosInSeries","videos","RenderSeries","children","pageContext","pageQuery"],"mappings":"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","file":"component---src-templates-index-tsx-b6093fcc67236f5317ef.js","sourcesContent":["// tslint:disable:no-http-string\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Facebook from '../icons/facebook';\nimport Twitter from '../icons/twitter';\nimport SubscribeModal from '../subscribe/SubscribeOverlay';\nimport SiteNavLogo from './SiteNavLogo';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.2rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.4px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`;\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`;\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps> {\n  subscribe = React.createRef<SubscribeModal>();\n\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  };\n\n  render() {\n    const { isHome = false } = this.props;\n    return (\n      <nav css={[isHome && HomeNavRaise, SiteNavStyles]}>\n        <SiteNavLeft>\n          {!isHome && <SiteNavLogo />}\n          <ul css={NavStyles} role=\"menu\">\n            {/* TODO: mark current nav item - add class nav-current */}\n            <li role=\"menuitem\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li>\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n          <SocialLinks>\n            {config.facebook && (\n              <a\n                css={SocialLink}\n                href={config.facebook}\n                target=\"_blank\"\n                title=\"Facebook\"\n                rel=\"noopener noreferrer\"\n              >\n                <Facebook />\n              </a>\n            )}\n            {config.twitter && (\n              <a\n                css={SocialLink}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )}\n          </SocialLinks>\n        </SiteNavRight>\n      </nav>\n    );\n  }\n}\n\nexport default SiteNav;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Facebook: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" style={{ height: '1.5rem' }}>\n    <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\" />\n  </svg>\n);\nexport default Facebook;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}{' '}\n          {config.footer && (\n            <Link to=\"/\">\n              | {config.title} {config.footer}\n            </Link>\n          )}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <a href=\"https://graphqleditor.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            GraphQL Editor\n          </a>\n\n          <a href=\"/rss.xml\">RSS</a>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { keyframes } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nconst rotate = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(720deg);\n}\n`;\n\nexport const Logo = styled.img`\n  animation: ${rotate} 100s infinite;\n  max-width: 200px;\n`;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Twitter: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\n  </svg>\n);\nexport default Twitter;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\nimport { darken, lighten } from 'polished';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n}\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\n    background: #000;\n    color: ${colors.whitegrey};\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color 0.3s;\n    margin: 0 4px;\n    margin-bottom: 5px;\n    min-width: 50px;\n\n    &.active {\n      background-color: ${lighten(0.02)(colors.darkgrey)};\n    }\n\n    &:hover:not(.active) {\n      background-color: ${colors.midgrey};\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link\n            key={`pagination-number${i + 1}`}\n            className={i + 1 === currentPage ? 'active' : ''}\n            to={`/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import { graphql } from 'gatsby';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport config from '../website-config';\nimport Pagination from '../components/Pagination';\n\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  WallPosts,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport { Logo } from '../components/Logo';\n\nexport interface IndexProps {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\nfunction RenderSeries(props: React.PropsWithChildren<IndexProps>): React.ReactNode {\n  const allPosts = props.data.allMarkdownRemark.edges;\n  const seriesPosts = allPosts.filter((post) => post.node.frontmatter.series);\n  return seriesPosts.map((post) => {\n    // filter out drafts in production\n    return (\n      (post.node.frontmatter.draft !== true || process.env.NODE_ENV !== 'production') && (\n        <PostCard\n          key={post.node.fields.slug}\n          videosInSeries={post.node.frontmatter.series?.videos || 1}\n          post={post.node}\n        />\n      )\n    );\n  });\n}\n\nconst IndexPage: React.FC<IndexProps> = (props) => {\n  const width = props.data.header.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n  const height = String(Number(width) / props.data.header.childImageSharp.fluid.aspectRatio);\n\n  return (\n    <IndexLayout css={WallPosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fluid.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fluid.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width} />\n        <meta property=\"og:image:height\" content={height} />\n      </Helmet>\n      <Wrapper>\n        <header\n          css={[outer, SiteHeader]}\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.fluid.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteHeaderContent>\n              <Logo\n                style={{ marginBottom: 15 }}\n                src={props.data.logo.childImageSharp.fixed.src}\n                alt={config.title}\n              />\n              <SiteTitle>\n                <span>{config.title}</span>\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n            <SiteNav isHome />\n          </div>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>{RenderSeries(props)}</div>\n          </div>\n        </main>\n        {props.children}\n        <Pagination\n          currentPage={props.pageContext.currentPage}\n          numPages={props.pageContext.numPages}\n        />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"img/Universe.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/cover.jpg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(maxWidth: 2000) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            draft\n            series {\n              id\n              videos\n            }\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}