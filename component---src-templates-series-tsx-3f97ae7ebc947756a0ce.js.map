{"version":3,"sources":["webpack:///./src/templates/series.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/icons/facebook.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Logo.tsx","webpack:///./src/components/icons/twitter.tsx"],"names":["Tags","props","post","pageContext","serie","content","excerpt","data","allMarkdownRemark","edges","totalCount","css","WallPosts","lang","config","title","name","property","siteUrl","pathContext","slug","facebook","twitter","split","outer","SiteHeader","style","backgroundImage","header","childImageSharp","fluid","src","inner","marginBottom","logo","fixed","alt","isHome","id","SiteMain","PostFeed","PostFeedRaise","map","node","key","fields","pageQuery","HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SiteNav","subscribe","React","openModal","current","open","render","this","role","to","SocialLink","href","target","rel","Facebook","xmlns","viewBox","height","d","SiteFooter","setLightness","colors","darkgrey","SiteFooterContent","SiteFooterNav","Footer","className","Date","getFullYear","footer","rotate","keyframes","Logo","Twitter"],"mappings":"sTA4IeA,UAzE0B,SAACC,GACxC,IAAMC,EAAOD,EAAME,YAAYC,MACzBC,EAAUJ,EAAME,YAAYG,QAFgB,EAGpBL,EAAMM,KAAKC,kBAAjCC,EAH0C,EAG1CA,MAAOC,EAHmC,EAGnCA,WAEf,OACE,YAAC,IAAD,CAAaC,IAAKC,KAChB,YAAC,IAAD,KACE,oBAAMC,KAAMC,IAAOD,OACnB,yBACGX,EAAKa,MADR,MACkBD,IAAOC,OAEzB,oBAAMC,KAAK,cAAcX,QAASA,IAClC,oBAAMY,SAAS,eAAeZ,QAASS,IAAOC,QAC9C,oBAAME,SAAS,UAAUZ,QAAQ,YACjC,oBAAMY,SAAS,WAAWZ,QAAYH,EAAKa,MAAV,MAAqBD,IAAOC,QAC7D,oBAAME,SAAS,SAASZ,QAASS,IAAOI,QAAUjB,EAAMkB,YAAYC,OACnEN,IAAOO,UAAY,oBAAMJ,SAAS,oBAAoBZ,QAASS,IAAOO,WACvE,oBAAML,KAAK,eAAeX,QAAQ,wBAClC,oBAAMW,KAAK,gBAAgBX,QAAYH,EAAKa,MAAV,MAAqBD,IAAOC,QAC9D,oBAAMC,KAAK,cAAcX,QAASS,IAAOI,QAAUjB,EAAMkB,YAAYC,OACpEN,IAAOQ,SACN,oBACEN,KAAK,eACLX,QAAO,IAAMS,IAAOQ,QAAQC,MAAM,wBAAwB,MAIhE,YAAC,IAAD,KACE,sBACEZ,IAAG,YAAE,CAACa,IAAOC,MACbC,MAAO,CACLC,gBAAiB,QAAQ1B,EAAMM,KAAKqB,OAAOC,gBAAgBC,MAAMC,IAAlD,OAGjB,mBAAKpB,IAAKqB,KACR,YAAC,IAAD,KACE,YAAC,IAAD,CACEN,MAAO,CAAEO,aAAc,IACvBF,IAAK9B,EAAMM,KAAK2B,KAAKL,gBAAgBM,MAAMJ,IAC3CK,IAAKlC,EAAKa,QAEZ,YAAC,IAAD,KACE,wBAAOb,EAAKa,QAEd,YAAC,IAAD,KACGV,EACD,2CACmBK,EAAa,GAAQA,EAArB,UACD,IAAfA,GAAoB,UACL,IAAfA,GAAoB,+BAI3B,YAAC,IAAD,CAAS2B,QAAM,MAInB,oBAAMC,GAAG,YAAY3B,IAAG,YAAE,CAAC4B,IAAUf,OACnC,mBAAKb,IAAKqB,KACR,mBAAKrB,IAAG,YAAE,CAAC6B,IAAUC,OAClBhC,EAAMiC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CAAUC,IAAKD,EAAKE,OAAOzB,KAAMlB,KAAMyC,UAK/C,YAAC,IAAD,SAQD,IAAMG,EAAY,c,gKCjIzB,IAAMC,EAAe,CAAH,gFAOZC,EAAgB,CAAH,wKAWbC,EAAc,mBAAH,mBAAG,CAAH,mSAmBXC,EAAY,CAAH,mQA2BTC,EAAe,mBAAH,mBAAG,CAAH,4HAWZC,EAAc,mBAAH,mBAAG,CAAH,6GAYXC,E,4JACJC,UAAYC,c,EAEZC,UAAY,WACN,EAAKF,UAAUG,SACjB,EAAKH,UAAUG,QAAQC,Q,4GAI3BC,OAAA,WAAS,MACoBC,KAAK3D,MAAxBoC,cADD,SAEP,OACE,mBAAK1B,IAAG,YAAE,CAAC0B,GAAUU,EAAcC,KACjC,YAACC,EAAD,MACIZ,GAAU,YAAC,IAAD,MACZ,kBAAI1B,IAAKuC,EAAWW,KAAK,QAEvB,kBAAIA,KAAK,YACP,YAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,kBAAID,KAAK,YACP,YAAC,IAAD,CAAMC,GAAG,UAAT,YAIN,YAACX,EAAD,KACE,YAACC,EAAD,KACGtC,IAAOO,UACN,iBACEV,IAAKoD,IACLC,KAAMlD,IAAOO,SACb4C,OAAO,SACPlD,MAAM,WACNmD,IAAI,uBAEJ,YAAC,IAAD,OAGHpD,IAAOQ,SACN,iBACEX,IAAKoD,IACLC,KAAMlD,IAAOQ,QACbP,MAAM,UACNkD,OAAO,SACPC,IAAI,uBAEJ,YAAC,IAAD,W,GA9CMX,aAwDPF,O,kCC5Jf,0BAQec,IALY,kBACzB,mBAAKC,MAAM,6BAA6BC,QAAQ,YAAY3C,MAAO,CAAE4C,OAAQ,WAC3E,oBAAMC,EAAE,oF,kJCKNC,EAAa7D,YAAH,gFAKA8D,YAAa,SAAUC,IAAOC,UAL9B,KAQVC,EAAoB,CAAH,2RAmBjBC,EAAgB,mBAAH,mBAAG,CAAH,2SAkEJC,IApCU,WACvB,OACE,sBAAQnE,IAAG,YAAE,CAACa,IAAOgD,KACnB,mBAAK7D,IAAG,YAAE,CAACqB,IAAO4C,KAChB,uBAASG,UAAU,aACjB,YAAC,IAAD,CAAMjB,GAAG,KAAKhD,IAAOC,OADvB,OAC6C,IAAIiE,MAAOC,cAAe,IACpEnE,IAAOoE,QACN,YAAC,IAAD,CAAMpB,GAAG,KAAT,KACKhD,IAAOC,MADZ,IACoBD,IAAOoE,SAI/B,YAACL,EAAD,KACE,YAAC,IAAD,CAAMf,GAAG,KAAT,gBACChD,IAAOO,UACN,iBAAG2C,KAAMlD,IAAOO,SAAU4C,OAAO,SAASC,IAAI,uBAA9C,YAIDpD,IAAOQ,SACN,iBAAG0C,KAAMlD,IAAOQ,QAAS2C,OAAO,SAASC,IAAI,uBAA7C,WAKF,iBAAGF,KAAK,4BAA4BC,OAAO,SAASC,IAAI,uBAAxD,kBAIA,iBAAGF,KAAK,YAAR,Y,2RC7FV,IAAMmB,EAASC,YAAH,KASCC,EAAO,mBAAH,mBAAG,CAAH,aACFF,EADE,oC,kCCZjB,0BAQeG,IALW,kBACxB,mBAAKlB,MAAM,6BAA6BC,QAAQ,aAC9C,oBAAME,EAAE","file":"component---src-templates-series-tsx-3f97ae7ebc947756a0ce.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  WallPosts,\n} from '../styles/shared';\nimport { PageContext, PostFrontMatter } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\nimport { Logo } from '../components/Logo';\n\ninterface TagTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  pageContext: {\n    serieId: string;\n    serie: PostFrontMatter;\n    excerpt: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: Array<{\n        node: {\n          id: string;\n          description: string;\n          image?: {\n            childImageSharp: {\n              fluid: any;\n            };\n          };\n        };\n      }>;\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n  };\n}\n\nconst Tags: React.FC<TagTemplateProps> = (props) => {\n  const post = props.pageContext.serie;\n  const content = props.pageContext.excerpt;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout css={WallPosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {post.title} - {config.title}\n        </title>\n        <meta name=\"description\" content={content} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${post.title} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${post.title} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header\n          css={[outer, SiteHeader]}\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.fluid.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteHeaderContent>\n              <Logo\n                style={{ marginBottom: 15 }}\n                src={props.data.logo.childImageSharp.fixed.src}\n                alt={post.title}\n              />\n              <SiteTitle>\n                <span>{post.title}</span>\n              </SiteTitle>\n              <SiteDescription>\n                {content}\n                <span>\n                  A collection of {totalCount > 1 && `${totalCount} videos`}\n                  {totalCount === 1 && '1 video'}\n                  {totalCount === 0 && 'No videos. Coming soon...'}\n                </span>\n              </SiteDescription>\n            </SiteHeaderContent>\n            <SiteNav isHome />\n          </div>\n        </header>\n\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($serieId: String) {\n    logo: file(relativePath: { eq: \"img/Universe.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/cover.jpg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(maxWidth: 2000) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allTagYaml {\n      edges {\n        node {\n          id\n          description\n          image {\n            childImageSharp {\n              fluid(maxWidth: 3720) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___inseries___index], order: ASC }\n      filter: { frontmatter: { inseries: { series: { eq: $serieId } }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","// tslint:disable:no-http-string\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Facebook from '../icons/facebook';\nimport Twitter from '../icons/twitter';\nimport SubscribeModal from '../subscribe/SubscribeOverlay';\nimport SiteNavLogo from './SiteNavLogo';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.2rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.4px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`;\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`;\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps> {\n  subscribe = React.createRef<SubscribeModal>();\n\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  };\n\n  render() {\n    const { isHome = false } = this.props;\n    return (\n      <nav css={[isHome && HomeNavRaise, SiteNavStyles]}>\n        <SiteNavLeft>\n          {!isHome && <SiteNavLogo />}\n          <ul css={NavStyles} role=\"menu\">\n            {/* TODO: mark current nav item - add class nav-current */}\n            <li role=\"menuitem\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li>\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n          <SocialLinks>\n            {config.facebook && (\n              <a\n                css={SocialLink}\n                href={config.facebook}\n                target=\"_blank\"\n                title=\"Facebook\"\n                rel=\"noopener noreferrer\"\n              >\n                <Facebook />\n              </a>\n            )}\n            {config.twitter && (\n              <a\n                css={SocialLink}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )}\n          </SocialLinks>\n        </SiteNavRight>\n      </nav>\n    );\n  }\n}\n\nexport default SiteNav;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Facebook: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" style={{ height: '1.5rem' }}>\n    <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\" />\n  </svg>\n);\nexport default Facebook;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}{' '}\n          {config.footer && (\n            <Link to=\"/\">\n              | {config.title} {config.footer}\n            </Link>\n          )}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <a href=\"https://graphqleditor.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            GraphQL Editor\n          </a>\n\n          <a href=\"/rss.xml\">RSS</a>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { keyframes } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nconst rotate = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(720deg);\n}\n`;\n\nexport const Logo = styled.img`\n  animation: ${rotate} 100s infinite;\n  max-width: 200px;\n`;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Twitter: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\n  </svg>\n);\nexport default Twitter;\n"],"sourceRoot":""}